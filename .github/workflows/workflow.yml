name: workflow.yml

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-test-analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install required tools
        run: |
          dotnet tool install -g dotnet-sonarscanner
          dotnet tool install -g dotnet-reportgenerator-globaltool
          dotnet tool install -g dotnet-stryker

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build application
        run: dotnet build --no-restore --configuration Release

      - name: Run unit tests with coverage
        run: |
          dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage" --results-directory TestResults

      - name: Generate code coverage report
        run: |
          reportgenerator -reports:"TestResults/**/coverage.cobertura.xml" -targetdir:coverage-report -reporttypes:SonarQube

      - name: Start Static Code Analysis
        run: |
          dotnet sonarscanner begin \
            /k:"${{ vars.SONAR_PROJECT_KEY }}" \
            /d:sonar.host.url="${{ vars.SONAR_URL }}" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.coverageReportPaths="coverage-report/SonarQube.xml" \
            /d:sonar.qualitygate.wait=true \
            /d:sonar.qualitygate.timeout=300

      - name: Complete Static Code Analysis
        run: |
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      - name: Run Mutation Tests
        run: |
          dotnet stryker --break-at 80

      - name: Upload Coverage Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: CoverageReport
          path: coverage-report

      - name: Upload Stryker Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: StrykerReport
          path: StrykerOutput

      - name: Deploy Backend
        run: |
          docker-compose -f compose.yaml up --build -d

      - name: Run K6 Performance Tests
        run: |
          docker-compose run k6

      - name: Run TestCaf√© End-to-End Tests
        run: |
          docker-compose run testcafe chromium /tests/e2e_test.js
